<policies>
    <inbound>
        <base />

        <authentication-managed-identity resource="{{nv-ps-appreg-clientid}}" />
        <set-variable name="token" value="@(context.Request.Headers.GetValueOrDefault(&quot;AppAuthToken&quot;,&quot;scheme param&quot;).Split(&apos; &apos;).Last())" />
        <!-- Send request to Okta Token Server to validate token -->
        <send-request mode="new" response-variable-name="tokenstate" timeout="20" ignore-error="true">
            <set-url>{{nv-ps-auth-app-introspect-url}}</set-url>

            <set-method>POST</set-method>
            <set-header name="Content-Type" exists-action="override">
                <value>application/x-www-form-urlencoded</value>
            </set-header>

            <set-body>@($&quot;token={(string)context.Variables[&quot;token&quot;]}&amp;client_id={{nv-ps-auth-app-clientid}}&amp;token_type_hint=access_token&quot;)</set-body>

        </send-request>
         <choose>
            <when condition="@((bool)((IResponse)context.Variables[&quot;tokenstate&quot;]).Body.As&lt;JObject&gt;()[&quot;active&quot;] == false)">
                <!-- Return 401 Unauthorized with http-problem payload -->
                <return-response>
                    <set-status code="401" reason="Unauthorized" />
                    <set-header name="WWW-Authenticate" exists-action="override">
                        <value>Bearer error="invalid_token"</value>
                    </set-header>
                </return-response>
            </when>
        </choose>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>