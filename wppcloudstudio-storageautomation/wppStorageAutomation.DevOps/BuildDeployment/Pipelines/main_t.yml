name: WPP Cloud Studio Build Deployment

variables:
  - template: /wppStorageAutomation.DevOps/BuildDeployment/Pipelines/Templates/Variables/environment.yml
  - template: /wppStorageAutomation.DevOps/BuildDeployment/Pipelines/Templates/Variables/package.yml
  - template: /wppStorageAutomation.DevOps/BuildDeployment/Pipelines/Templates/Variables/infra.yml

trigger: 
 - Release1.0
pr: none


stages:
    - stage: Startup
      jobs:
      - job: Initialize
        pool:
          vmImage: 'windows-latest'
        steps:
        - script: echo 'Initialisation completed'

    - stage: Build_App_Artifacts
      jobs:
        - template: /wppStorageAutomation.DevOps/BuildDeployment/Pipelines/Templates/Stage/app.build.yml
      dependsOn:
      - Startup
      condition: succeeded('Startup')

    - stage: T_App_Deployment
      variables:
        - group: wppstorageautomationGroup-t
        - group: "Cloud Studio Keyvault - t"
        - template: /wppStorageAutomation.DevOps/BuildDeployment/Pipelines/Templates/Variables/Values_t.yml
      jobs:
        - template: /wppStorageAutomation.DevOps/BuildDeployment/Pipelines/Templates/Stage/app.deploy.yml
          parameters:
            env: ${{ variables.env }}
      dependsOn:
      - Build_App_Artifacts
      condition: succeeded('Build_App_Artifacts')

    - stage: PERF_App_Deployment
      variables:
        - group: wppstorageautomationGroup-perf
        - group: "Cloud Studio Keyvault - perf"
        - template: /wppStorageAutomation.DevOps/BuildDeployment/Pipelines/Templates/Variables/Values_perf.yml
      jobs:
        - template: /wppStorageAutomation.DevOps/BuildDeployment/Pipelines/Templates/Stage/app.deploy.yml
          parameters:
            env: ${{ variables.env }}
      dependsOn:
      - T_App_Deployment
      condition: succeeded('T_App_Deployment')


  
